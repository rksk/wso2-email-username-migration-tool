package org.wso2.email.username.migration.tool.db;

public class SQLQueries {

    public static String USER_LIST_TO_RENAME_SQL = "SELECT UM_USER_NAME FROM UM_USER WHERE UM_USER_NAME LIKE '%@%' LIMIT ?";
    public static final String UPDATE_UM_USER_SQL = "UPDATE UM_USER SET UM_USER_NAME=? WHERE UM_USER_NAME=?";
    public static final String UPDATE_UM_HYBRID_REMEMBER_ME_SQL = "UPDATE UM_HYBRID_REMEMBER_ME SET UM_USER_NAME=? WHERE UM_USER_NAME=?";
    public static final String UPDATE_UM_HYBRID_USER_ROLE_SQL = "UPDATE UM_HYBRID_USER_ROLE SET UM_USER_NAME=? WHERE UM_USER_NAME=?";

    public static final String SELECT_USER_EMAIL_SQL = "SELECT UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE " +
            "WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE UM_USER_NAME=?) AND UM_ATTR_NAME='mail'";
    public static final String UPDATE_USER_EMAIL_SQL = "UPDATE UM_USER_ATTRIBUTE SET " +
            "UM_ATTR_VALUE=? WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE UM_USER_NAME=? ) AND UM_ATTR_NAME='mail'";
    public static final String ADD_USER_EMAIL_SQL = "INSERT INTO UM_USER_ATTRIBUTE " +
            "(UM_USER_ID, UM_ATTR_NAME, UM_ATTR_VALUE, UM_PROFILE_ID, UM_TENANT_ID) SELECT (SELECT UM_ID FROM UM_USER" +
            " WHERE UM_USER_NAME=?), 'mail', ?, 'default', -1234";

    public static final String UPDATE_CM_RECEIPT_SQL = "UPDATE CM_RECEIPT SET PII_PRINCIPAL_ID=? WHERE PII_PRINCIPAL_ID=?";
    public static final String UPDATE_IDN_ASSOCIATED_ID_SQL = "UPDATE IDN_ASSOCIATED_ID SET USER_NAME=? WHERE USER_NAME=?";
    public static final String UPDATE_IDN_IDENTITY_USER_DATA_SQL = "UPDATE IDN_IDENTITY_USER_DATA SET USER_NAME=? WHERE USER_NAME=?";
    public static final String UPDATE_IDN_RECOVERY_DATA_SQL = "UPDATE IDN_RECOVERY_DATA SET USER_NAME=? WHERE USER_NAME=?";
    public static final String UPDATE_SP_APP_SQL = "UPDATE SP_APP SET USERNAME=? WHERE USERNAME=?";

    public static final String UPDATE_REG_PROPERTY_SQL = "UPDATE REG_PROPERTY SET REG_VALUE=? WHERE REG_NAME='userId' AND REG_VALUE=?";

    private SQLQueries(){}
}
